require 'erb'

module DotfileManager
  module Rendering
    require "dotfile_manager/has_config_variable"

    class Context
      attr_reader :config, :template

      include HasConfigVariable
      include HasTarget

      def initialize(template, helpers:)
        @template = template
        @target = target

        helpers.each { |helper| extend(helper) }
      end

      def target
        @template.target
      end

      def config
        @template.config
      end

      def result
        "#{header}\n#{ERB.new(@template.renderable_template).result(binding)}"
      end

      def header
        comment_format = template.front_matter['comment_format'] || '# %s'

        # FIXME: add git sha/previous sha here (embed yaml?)
        # FIXME: warn when overwriting a file that doesn't have the 'previous' sha, or when the previous sha does not exist
        ["!!!!!!!!", "WARNING!", "!!!!!!!!", "This file was generated by a script."].map do |line|
          comment_format % line
        end.join("\n") << "\n\n\n"
      end
    end
  end
end
